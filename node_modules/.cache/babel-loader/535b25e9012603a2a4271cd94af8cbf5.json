{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Quiz/src/contexts/quiz.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from \"react\";\nimport questions from '../data';\nimport { renderAnswers } from \"../helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  questions,\n  currentQuestionIndex: 0,\n  correctAnswerCount: 0,\n  resultsReached: false,\n  answers: renderAnswers(questions[0])\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'NEXT_QUESTION':\n      console.log(state);\n      const resultsReached = state.currentQuestionIndex === questions.length - 1 ? true : false;\n      return { ...state,\n        currentQuestionIndex: state.currentQuestionIndex + 1,\n        resultsReached,\n        answers: resultsReached ? '' : renderAnswers(questions[state.currentQuestionIndex + 1])\n      };\n\n    case 'RESTART':\n      return { ...state,\n        currentQuestionIndex: 0,\n        correctAnswerCount: 0,\n        resultsReached: false,\n        answers: renderAnswers(questions[0])\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const QuizContext = /*#__PURE__*/createContext();\nexport const QuizProvider = ({\n  children\n}) => {\n  _s();\n\n  const value = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(QuizContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 12\n  }, this);\n};\n\n_s(QuizProvider, \"HDl9A1duRDI+maTNi9v2R1p+EwQ=\");\n\n_c = QuizProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizProvider\");","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Quiz/src/contexts/quiz.js"],"names":["createContext","useReducer","questions","renderAnswers","initialState","currentQuestionIndex","correctAnswerCount","resultsReached","answers","reducer","state","action","type","console","log","length","QuizContext","QuizProvider","children","value"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,SAAtB;AACA,SAASC,aAAT,QAA8B,YAA9B;;AAEA,MAAMC,YAAY,GAAG;AACjBF,EAAAA,SADiB;AAEjBG,EAAAA,oBAAoB,EAAE,CAFL;AAGjBC,EAAAA,kBAAkB,EAAE,CAHH;AAIjBC,EAAAA,cAAc,EAAE,KAJC;AAKjBC,EAAAA,OAAO,EAAEL,aAAa,CAACD,SAAS,CAAC,CAAD,CAAV;AALL,CAArB;;AAQA,MAAMO,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,eAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,YAAMH,cAAc,GAAGG,KAAK,CAACL,oBAAN,KAA+BH,SAAS,CAACa,MAAV,GAAmB,CAAlD,GAAsD,IAAtD,GAA6D,KAApF;AACA,aAAO,EACH,GAAGL,KADA;AAEHL,QAAAA,oBAAoB,EAAEK,KAAK,CAACL,oBAAN,GAA6B,CAFhD;AAGHE,QAAAA,cAHG;AAIHC,QAAAA,OAAO,EAAED,cAAc,GAAG,EAAH,GAAQJ,aAAa,CAACD,SAAS,CAACQ,KAAK,CAACL,oBAAN,GAA6B,CAA9B,CAAV;AAJzC,OAAP;;AAMA,SAAK,SAAL;AACA,aAAO,EACH,GAAGK,KADA;AAEHL,QAAAA,oBAAoB,EAAE,CAFnB;AAGHC,QAAAA,kBAAkB,EAAE,CAHjB;AAIHC,QAAAA,cAAc,EAAE,KAJb;AAKHC,QAAAA,OAAO,EAAEL,aAAa,CAACD,SAAS,CAAC,CAAD,CAAV;AALnB,OAAP;;AAOA;AAAS,aAAOQ,KAAP;AAlBb;AAoBH,CArBD;;AAuBA,OAAO,MAAMM,WAAW,gBAAGhB,aAAa,EAAjC;AAEP,OAAO,MAAMiB,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AACxC,QAAMC,KAAK,GAAGlB,UAAU,CAACQ,OAAD,EAAUL,YAAV,CAAxB;AACA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEe,KAA7B;AAAA,cAAqCD;AAArC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAHM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import { createContext, useReducer } from \"react\";\nimport questions from '../data';\nimport { renderAnswers } from \"../helpers\";\n\nconst initialState = {\n    questions, \n    currentQuestionIndex: 0,\n    correctAnswerCount: 0,\n    resultsReached: false,\n    answers: renderAnswers(questions[0])\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'NEXT_QUESTION' : \n        console.log(state);\n        const resultsReached = state.currentQuestionIndex === questions.length - 1 ? true : false\n        return {\n            ...state,\n            currentQuestionIndex: state.currentQuestionIndex + 1,\n            resultsReached,\n            answers: resultsReached ? '' : renderAnswers(questions[state.currentQuestionIndex + 1])\n        }\n        case 'RESTART' : \n        return {\n            ...state, \n            currentQuestionIndex: 0,\n            correctAnswerCount: 0,\n            resultsReached: false,\n            answers: renderAnswers(questions[0])\n        }\n        default: return state;\n    }\n}\n\nexport const QuizContext = createContext();\n\nexport const QuizProvider = ({children}) => {\n    const value = useReducer(reducer, initialState);\n    return <QuizContext.Provider value={value}>{children}</QuizContext.Provider>;\n}"]},"metadata":{},"sourceType":"module"}